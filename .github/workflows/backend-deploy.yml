name: Backend Deploy

on:
  push:
    paths:
      - 'backend/**'
      - 'docker-compose.yml'
      - 'scripts/**'
      - 'appspec.yml'
    branches:
      - main

jobs:
  build-and-deploy-backend:
    name: Build & Deploy Backend
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      # 1. Checkout
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Configura credenciais da AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::156041409339:role/GitHubActionsCodeDeployRole
          aws-region: us-east-1

      # 3. Setup NodeJS
      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      # 4. Instala dependÃªncias do Backend
      - name: Install Backend dependencies
        working-directory: ./backend
        run: npm install --no-package-lock

      # 5. Build do Backend
      - name: Build Backend project
        working-directory: ./backend
        run: npm run build

      # 6. Empacota Backend para o deploy
      - name: Package Backend for Deployment
        run: |
          zip -r application.zip \
            backend/ \
            backend/package*.json \
            backend/dist/ \
            docker-compose.yml \
            appspec.yml \
            scripts/

      # 7. Upload para S3
      - name: Upload to S3 for CodeDeploy
        run: aws s3 cp application.zip s3://cumes-backend-deployment/application.zip

      # 8. Criar deployment no CodeDeploy
      - name: Create deployment in CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name cumes-backend-app \
            --deployment-group-name cumes-backend-deployment-group \
            --s3-location bucket=cumes-backend-deployment,bundleType=zip,key=application.zip
