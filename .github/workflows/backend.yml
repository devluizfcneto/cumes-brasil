name: Build, Deploy and Migrate Backend

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure AWS Credentials using IAM Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::345594570749:role/cd  # ARN da sua role
          aws-region: us-east-1
          role-session-name: GitHubActionsSession

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies (including devDependencies)
        run: npm install --include=dev
        working-directory: ./backend

      - name: Archive the whole repository
        run: zip -r backend.zip ./*

      - name: Upload backend to S3
        run: aws s3 cp backend.zip s3://cumes-backend-deployments/

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Configure AWS Credentials using IAM Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::345594570749:role/cd  # ARN da sua role
          aws-region: us-east-1
          role-session-name: GitHubActionsSession

      - name: Create Deployment via CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name cumes-backend-app \
            --deployment-group-name cumes-backend-group \
            --s3-location bucket=cumes-backend-deployments,bundleType=zip,key=backend.zip

  migrations:
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Configure AWS Credentials using IAM Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::345594570749:role/cd  # ARN da sua role
          aws-region: us-east-1
          role-session-name: GitHubActionsSession

      - name: Run TypeORM Migrations
        run: npm run migration:run
        working-directory: ./backend
        env:
          DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
          DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
