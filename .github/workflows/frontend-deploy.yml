name: Deploy Frontend to S3 and Invalidate CloudFront Cache

on:
  push:
    branches:
      - master
  workflow_dispatch: # Permitir execução manual

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      # 1. Checkout do repositório
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Configurar credenciais AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1

      # 3. Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm' # Alterado para 'npm'

      # 4. Instalar pnpm
      - name: Install pnpm
        run: npm install -g pnpm

      # 5. Configurar cache para pnpm
      - name: Setup pnpm cache
        run: pnpm config set store-dir ~/.pnpm-store

      # 6. Instalar dependências
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # 7. Build do Frontend
      - name: Build Frontend
        run: pnpm build

      # 8. Upload para o S3
      - name: Upload to S3
        run: |
          aws s3 sync ./dist s3://gobeesiness-vagas-frontend \
          --acl public-read \
          --delete

      # 9. Invalidar cache do CloudFront
      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id EBTYTB7REZ86F \
            --paths "/*"
