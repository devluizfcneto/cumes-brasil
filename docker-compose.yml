version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: cumes-postgres
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - cumes-network

  api:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: cumes-api
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      SECRET_KEY: ${SECRET_KEY}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      API_HOSTNAME: ${API_HOSTNAME}
      API_PORT: ${API_PORT}
      WEB_HOSTNAME: ${WEB_HOSTNAME}
      WEB_PORT: ${WEB_PORT}
      WEB_USER_RESET_PASSWORD_PATH: ${WEB_USER_RESET_PASSWORD_PATH}
      MAIL_USER: ${MAIL_USER}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      OAUTH2_ENABLED: ${OAUTH2_ENABLED}
    ports:
      - "3001:8080"  # Mapeia a porta 3001 externa para a 8080 interna do contÃªiner
    depends_on:
      - postgres
    networks:
      - cumes-network

volumes:
  db-data:

networks:
  cumes-network:
    driver: bridge
